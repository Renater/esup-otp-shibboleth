<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:util="http://www.springframework.org/schema/util" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:c="http://www.springframework.org/schema/c" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"

    default-init-method="initialize" default-destroy-method="destroy">

    <!-- System beans needed for extension to function, loaded after global.xml -->
  
    <bean p:id="authn/EsupOtp" parent="shibboleth.AuthenticationFlow"
            p:order="%{idp.authn.esupOtp.order:1000}"
            p:nonBrowserSupported="%{idp.authn.esupOtp.nonBrowserSupported:false}"
            p:passiveAuthenticationSupported="%{idp.authn.esupOtp.passiveAuthenticationSupported:true}"
            p:forcedAuthenticationSupported="%{idp.authn.esupOtp.forcedAuthenticationSupported:true}"
            p:proxyRestrictionsEnforced="%{idp.authn.esupOtp.proxyRestrictionsEnforced:%{idp.authn.enforceProxyRestrictions:true}}"
            p:proxyScopingEnforced="%{idp.authn.esupOtp.proxyScopingEnforced:false}"
            p:discoveryRequired="%{idp.authn.esupOtp.discoveryRequired:false}"
            p:lifetime="%{idp.authn.esupOtp.lifetime:%{idp.authn.defaultLifetime:PT1H}}"
            p:inactivityTimeout="%{idp.authn.esupOtp.inactivityTimeout:%{idp.authn.defaultTimeout:PT30M}}"
            p:reuseCondition-ref="#{'%{idp.authn.esupOtp.reuseCondition:shibboleth.Conditions.TRUE}'.trim()}"
            p:activationCondition-ref="#{'%{idp.authn.esupOtp.activationCondition:shibboleth.Conditions.TRUE}'.trim()}"
            p:subjectDecorator="#{getObject('%{idp.authn.TOTP.subjectDecorator:}'.trim())}">
        <property name="supportedPrincipalsByString">
            <bean parent="shibboleth.CommaDelimStringArray"
                c:_0="#{'%{idp.authn.esupOtp.supportedPrincipals:}'.trim()}" />
        </property>
    </bean>

    <bean p:id="esupotp" class="net.shibboleth.idp.authn.principal.GenericPrincipalService"
          c:claz="fr.renater.shibboleth.esup.otp.EsupOtpPrincipal">
        <constructor-arg name="serializer">
            <bean class="net.shibboleth.idp.authn.principal.SimplePrincipalSerializer"
                  c:claz="fr.renater.shibboleth.esup.otp.EsupOtpPrincipal" c:name="ESUPOTP" />
        </constructor-arg>
    </bean>
  
      <!-- Parent bean for use of alternative seed source. -->
  
</beans>