##
## Velocity Template for DisplayTOTPView view-state
##
## Velocity context will contain the following properties
## flowExecutionUrl - the form action location
## flowRequestContext - the Spring Web Flow RequestContext
## flowExecutionKey - the SWF execution key (this is built into the flowExecutionUrl)
## profileRequestContext - root of context tree
## authenticationContext - context with authentication request information
## authenticationErrorContext - context with login error state
## authenticationWarningContext - context with login warning state
## rpUIContext - the context with SP UI information from the metadata
## encoder - HTMLEncoder class
## cspDigester - Calculates base64-encoded SHA-2 hashes (call apply)
## cspNonce - Calculates secure nonces (call generateIdentifier)
## request - HttpServletRequest
## response - HttpServletResponse
## environment - Spring Environment object for property resolution
## custom - arbitrary object injected by deployer
##
#set ($esupOtpContext = $authenticationContext.getSubcontext('fr.renater.shibboleth.idp.plugin.authn.esup.otp.context.EsupOtpContext'))
#set ($rpContext = $profileRequestContext.getSubcontext('net.shibboleth.profile.context.RelyingPartyContext'))
##
#set ($onClick = "this.childNodes[0].nodeValue='#springMessageText('idp.esup.otp.sending', 'Sending in, please wait...')'")
$response.addHeader("Content-Security-Policy", "script-src-attr 'unsafe-hashes' 'sha256-$cspDigester.apply($onClick)'")
<!DOCTYPE html>
<html>
    <head>
        <title>#springMessageText("idp.title", "Web Login Service")</title>
        #parse("head.vm")
        <script>
            // Fonction de vérification de la sélection
            function checkSelection() {
                const selectElement = document.getElementById("transportchoose");
                const submitButton = document.getElementById("submitButton");
    
                // Active ou désactive le bouton en fonction de la sélection
                submitButton.disabled = (selectElement.value === "");
            }
    
            // Ajoute l'écouteur d'événement une fois le contenu chargé
            document.addEventListener("DOMContentLoaded", function() {
                const selectElement = document.getElementById("transportchoose");
                selectElement.addEventListener("change", checkSelection);
            });
        </script>
    </head>
    <body>
        <main class="main">
            <section class="small-12 small-centered medium-8 large-7">
                #parse("header.vm")

                #parse("esup-otp-error.vm")

                <form action="$flowExecutionUrl" method="post">
                    #parse("csrf/csrf.vm")

                    #parse("info.vm")

                    #if ($esupOtpContext.getEnabledChoices().isEmpty())
                        <article class="small-10 medium-10 large-7 small-centered text-center">
                            <p class="callout warning">
                                #springMessageText("idp.esup.otp.nochoices", "No choice configured.")
                                <br/><br/>
                                #springMessageText("idp.esup.otp.manager", "Go to application") : <a href="#springMessageText("idp.esup.otp.manager.link", "https://otpmanager-test.fr/preferences")" target="_blank">#springMessageText("idp.esup.otp.manager.here", "here")</a> 
                            </p>
                        </article>
                    #else
                        <fieldset class="small-10 medium-10 large-7 small-centered margin-top">
                        
                            <label for="transportchoose"><i class="fa fa-lg fa-rocket"></i> #springMessageText("idp.esup.otp.choices", "Generate token with below method")</label>
                            <select class="form-element" id="transportchoose" name="transportchoose" required>
                                <option value="" disabled selected>Selectionnez une option disponible</option>
                                #foreach($option in $esupOtpContext.getEnabledChoices())
                                    <option value="$option">
                                    $springMacroRequestContext.getMessage("idp.esup.otp.label.$option", $option)
                                    </option>
                                #end       
                            </select>
                            ### TODO Test below
                            ###springFormSingleSelect("transportchoose", $selectOptions, "required")

                            <button class="button float-right" type="submit" name="_eventId_proceed" id="submitButton"
                                disabled
                                onClick="$onClick"
                                >#springMessageText("idp.esup.otp.send", "Send")</button>
                        </fieldset>
                        
                        <article class="small-10 medium-10 large-7 small-centered text-center">
                            <p class="callout primary">
                                #springMessageText("idp.esup.otp.updatechoices", "Update choices.")
                                <br/><br/>
                                #springMessageText("idp.esup.otp.manager", "Go to application") : <a href="#springMessageText("idp.esup.otp.manager.link", "https://otpmanager-test.fr/preferences")" target="_blank">#springMessageText("idp.esup.otp.manager.here", "here")</a> 
                            </p>
                        </article>
                    #end
                </form>

                #parse("help.vm")

            </section>
        </main>
        #parse("footer.vm")
     </body>
</html>